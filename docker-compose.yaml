services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8000"
    container_name: application
    depends_on:
      database:
        condition: service_healthy
      database-migration:
        condition: service_started
    environment:
      DATABASE_URL: postgres://database:password@db:5432/newsletter
      APP_ENVIRONMENT: dev

  database:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: newsletter
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  database-migration:
    build:
      context: .
      dockerfile: Dockerfile.database-migration
    container_name: database-migration
    depends_on:
      database:
        condition: service_healthy
    environment:
      DB_HOST: database
      APP_USER: postgres
      APP_USER_PWD: password
      ENV SKIP_DOCKER: true

volumes:
  postgres_data:
